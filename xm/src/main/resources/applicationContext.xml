<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/context
                  http://www.springframework.org/schema/context/spring-context-4.0.xsd">

  <!-- 1.加载jdbc.properties文件的位置 -->
  <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

  <!--2.配置数据库连接 -->
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${database.driver}"/>
    <property name="url" value="${database.url}"/>
    <property name="username" value="${database.username}"/>
    <property name="password" value="${database.password}"/>
  </bean>

  <!-- 3.整合spring和mybatis框架
  将SqlSession等对象的创建交给Spring容器
  id值(sqlSessionFactory)是固定值
 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!-- 3.2.配置连接池(数据源) ref指向连接池bean对象的id值 -->
    <property name="dataSource" ref="dataSource"></property>
  </bean>

  <!--4.Mapper扫描，自动引入mapper类 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!-- 扫描所有XxxMapper接口，将接口实例的创建交给spring容器 -->
    <property name="basePackage" value="com.xm.mapper"/>
  </bean>
</beans>
